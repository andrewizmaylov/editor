import * as utils from './editorUtility.js';

class SchoolCard {

	static get toolbox() {
	  return {
	    title: 'SchoolCard',
	    icon: '<svg class="w-8 h-8" viewBox="0 0 183 126" xmlns="http://www.w3.org/2000/svg"><path d="M100.43 9.08H63.51c-2.39 0-4.57.41-6.54 1.22-1.98.82-3.81 2.06-5.48 3.74l.01.01c-.68.68-1.28 1.38-1.82 2.1-3.02.12-5.92.57-8.71 1.35.08-.22.17-.44.26-.65 1.19-2.88 2.94-5.48 5.27-7.8l.01.01.01-.01c2.33-2.33 4.93-4.08 7.79-5.26C57.15 2.59 60.22 2 63.51 2H117.16c3.28 0 6.36.59 9.23 1.77 2.88 1.19 5.48 2.94 7.8 5.26l-.01.01c2.34 2.34 4.09 4.94 5.27 7.79 1.18 2.87 1.77 5.94 1.77 9.23v.09h-7.08v-.09c0-2.39-.41-4.57-1.22-6.54-.82-1.98-2.06-3.81-3.73-5.48l-.01-.01-.01.01c-1.69-1.69-3.51-2.93-5.48-3.74-1.97-.81-4.16-1.22-6.54-1.22h-16.72zM47.84 83.07c.81 1.88 2.03 3.62 3.64 5.24l.16.17c1.63 1.58 3.41 2.78 5.34 3.57 1.97.81 4.15 1.22 6.53 1.22h15.86a3.54 3.54 0 013.54 3.54c0 .42-.07.83-.21 1.21-.58 2.24-1.25 4.44-1.99 6.58-.78 2.25-1.63 4.42-2.56 6.49a28 28 0 01-1.37 2.74c3.07-1.39 5.95-2.97 8.65-4.75h.01l-.01-.01a60.51 60.51 0 008.27-6.49c2.57-2.41 4.91-5.04 7.04-7.87.69-.92 1.75-1.41 2.82-1.41v-.01h13.61c2.38 0 4.56-.41 6.53-1.22 1.99-.82 3.83-2.07 5.51-3.74 1.67-1.67 2.91-3.5 3.73-5.48l.08-.2h7.42c-.26.99-.58 1.95-.97 2.89-1.18 2.86-2.94 5.47-5.28 7.81-2.34 2.32-4.94 4.08-7.8 5.26-2.86 1.18-5.93 1.78-9.21 1.78h-11.9c-2.09 2.65-4.34 5.1-6.75 7.36a66.791 66.791 0 01-9.23 7.27l-.01-.01a70.557 70.557 0 01-10.57 5.72c-3.73 1.63-7.7 2.99-11.89 4.08-1.24.32-2.62-.05-3.53-1.08a3.537 3.537 0 01.3-4.98c1.87-1.66 3.46-3.33 4.78-5.01l.15-.21c1.33-1.72 2.38-3.47 3.15-5.23l.01-.03c.87-1.94 1.66-3.92 2.35-5.93.22-.64.44-1.29.65-1.95H63.51c-3.28 0-6.35-.6-9.21-1.78-2.78-1.15-5.31-2.84-7.6-5.06-.08-.06-.15-.13-.22-.2-2.32-2.32-4.08-4.92-5.26-7.8-.52-1.26-.92-2.56-1.22-3.91 2.48.72 5.09 1.21 7.84 1.43zM61.944 60.449c-.293 4.054-1.794 7.246-4.503 9.575-2.692 2.329-6.245 3.494-10.662 3.494-4.83 0-8.635-1.622-11.413-4.866-2.76-3.26-4.14-7.729-4.14-13.405v-2.303c0-3.623.638-6.815 1.915-9.575 1.276-2.76 3.096-4.874 5.46-6.34 2.38-1.484 5.141-2.226 8.281-2.226 4.348 0 7.85 1.164 10.507 3.493 2.657 2.33 4.192 5.599 4.607 9.809h-7.764c-.19-2.433-.871-4.193-2.044-5.28-1.156-1.104-2.925-1.656-5.306-1.656-2.588 0-4.529.932-5.822 2.795-1.277 1.846-1.933 4.718-1.967 8.617v2.847c0 4.072.612 7.048 1.837 8.928 1.242 1.881 3.192 2.821 5.849 2.821 2.398 0 4.184-.543 5.357-1.63 1.19-1.104 1.872-2.804 2.044-5.098h7.764zM83.836 73c-.345-.673-.595-1.51-.75-2.51-1.812 2.018-4.167 3.028-7.065 3.028-2.743 0-5.02-.794-6.832-2.381-1.794-1.588-2.691-3.589-2.691-6.004 0-2.968 1.095-5.245 3.286-6.832 2.209-1.587 5.392-2.39 9.55-2.407h3.441V54.29c0-1.294-.336-2.33-1.009-3.106-.656-.776-1.7-1.164-3.131-1.164-1.26 0-2.252.301-2.976.905-.708.604-1.061 1.432-1.061 2.485h-7.48c0-1.622.5-3.123 1.502-4.503 1-1.38 2.415-2.459 4.244-3.235 1.828-.794 3.882-1.19 6.159-1.19 3.45 0 6.185.87 8.204 2.613 2.035 1.726 3.053 4.158 3.053 7.298V66.53c.017 2.657.388 4.667 1.113 6.03V73h-7.557zm-6.185-5.202a6.534 6.534 0 003.054-.724c.932-.5 1.622-1.165 2.07-1.993v-4.813H79.98c-3.743 0-5.736 1.294-5.978 3.881l-.025.44c0 .932.327 1.7.983 2.304.656.603 1.553.905 2.691.905zm35.169-15.786a20.323 20.323 0 00-2.692-.207c-2.829 0-4.684.958-5.564 2.873V73h-7.479V44.999h7.065l.207 3.338c1.501-2.57 3.58-3.856 6.237-3.856.828 0 1.605.113 2.329.337l-.103 7.194zm3.001 6.78c0-4.364.974-7.84 2.924-10.429 1.967-2.588 4.65-3.882 8.048-3.882 2.726 0 4.978 1.018 6.755 3.054V33.25h7.505V73h-6.755l-.362-2.976c-1.863 2.329-4.262 3.494-7.194 3.494-3.296 0-5.944-1.294-7.945-3.882-1.984-2.605-2.976-6.22-2.976-10.843zm7.479.544c0 2.622.457 4.632 1.371 6.03.915 1.397 2.243 2.096 3.986 2.096 2.311 0 3.942-.975 4.891-2.924v-11.05c-.932-1.95-2.545-2.925-4.84-2.925-3.605 0-5.408 2.924-5.408 8.773z" /></svg>',
	  };
	}
	constructor({data, config}) {
		this.data = data;
		this.wrapper = undefined;
		this.config = config || {};
	}

	render() {
		this.wrapper = utils.make('div', ['bg-gray-200', 'pt-4', 'm-6', 'rounded', 'flex', 'flex-col', 'w-full', 'text-sm', 'mx-auto'], {id: "SchoolCard"});

  	let introContainer = utils.make('div', ['flex', 'items-center', 'p-1', 'mx-4', 'mb-4', 'bg-white', 'rounded'] );
	  	let text_block = utils.make('div', ['flex-1', 'mr-2']);
		  	let intro_title = utils.make('div', ['text-xs', 'font-semibold', 'px-8', 'mt-3', '-mb-1']);
		  	intro_title.innerHTML = "Термин";

				const intro = utils.make('div', ['p-4', 'm-4', 'rounded', 'bg-gray-100'], {id: "intro", contentEditable: true});
		    intro.innerHTML = this.data && this.data.intro ? this.data.intro : `
		    	<b>"ПРОКРАСТИНАЦИЯ"</b></br></hr>
		    	Слово, значение которого должно быть разгадано за 15 секунд. Через 15 секунд, или по нажатию на кнопку, студенту будет показан ответ с расшифровкой термина.
		    `;
		  utils.appendMany(text_block, [intro_title, intro]);
		  let form = utils.imageUpload(this.data);
		utils.appendMany(introContainer, [text_block, form]);

  	let meaningContainer = utils.make('div', ['p-1', 'mx-4', 'mb-4', 'bg-white', 'rounded'] );
	  	let meaning_title = utils.make('div', ['text-xs', 'font-semibold', 'px-8', 'mt-3', '-mb-1']);
	  	meaning_title.innerHTML = "Разъяснение";

			const meaning = utils.make('div', ['p-4', 'm-4', 'rounded', 'bg-gray-100'], {id: "meaning", contentEditable: true});
	    meaning.innerHTML = this.data && this.data.meaning ? this.data.meaning : `
	    	Прокрастинация — склонность откладывать дела, приводящая к психологическим проблемам.
	    	В ответе может быть дана <a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%BA%D1%80%D0%B0%D1%81%D1%82%D0%B8%D0%BD%D0%B0%D1%86%D0%B8%D1%8F">ссылка</a> на любой внешний или внутренний ресурс в интернете.
    `;
	  utils.appendMany(meaningContainer, [meaning_title, meaning]);
	  utils.appendMany(this.wrapper, [introContainer, meaningContainer]);

  	return this.wrapper;
  }

  static get sanitize() {
    return {
      intro: true,
      meaning: true,
      img: true,
    };
  }

  save() {
  	let intro = document.getElementById('intro').innerHTML || '';
  	let meaning = document.getElementById('meaning').innerHTML || '';
  	let img = document.getElementById('uploadedImage').src.split('/img/uploads/')[1];

    return { intro, meaning, img }
  }

}

export default SchoolCard